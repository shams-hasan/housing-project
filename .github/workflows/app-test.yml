name: test

on:
  push:
    branches:
      - '**'

  pull_request:
    branches:
      - master
      - develop

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x]

    steps:
    - uses: actions/checkout@v2
    
    - name: Set up Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci
    
    - name: Install Chrome dependencies
      run: sudo apt-get install -y libnss3 libxss1 libappindicator1 libindicator7

    - name: Run tests and capture coverage
      run: |
        npm run test:ci -- --coverage  # Adjust the test command to generate coverage

        # Example: Parse coverage summary and extract percentage
        COVERAGE_PERCENTAGE=$(grep -o '"lines":{[^}]*' coverage/stslib/coverage-summary.json | awk -F'"pct":' '{s+=$2} END {print s/NR}')
        echo "Coverage Percentage: $COVERAGE_PERCENTAGE"

        # Store coverage percentage as an environment variable
        echo "::set-env name=COVERAGE_PERCENTAGE::$COVERAGE_PERCENTAGE"

    - name: Update coverage badges
      if: github.ref != 'refs/heads/master' && github.ref != 'refs/heads/develop'
      uses: demyanets/angular-coverage-badges-action@v1
      with:
        coverage-summary-path: coverage/stslib/coverage-summary.json
        protected-branches: '["master", "develop"]'

    # You can add more steps here that use $COVERAGE_PERCENTAGE if needed
